plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'
	implementation 'com.datastax.oss:java-driver-core:4.17.0'
	
	// JSON Processing
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	
	// API Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	
	// Utilities
	implementation 'org.apache.commons:commons-lang3:3.14.0'
	implementation 'com.google.guava:guava:32.1.3-jre'
	
	// Logging
	implementation 'org.slf4j:slf4j-api'
	
	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
	testImplementation 'org.testcontainers:cassandra:1.19.3'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Custom task for running the application
task run(type: JavaExec) {
	group = 'application'
	mainClass = 'com.example.demo.DemoApplication'
	classpath = sourceSets.main.runtimeClasspath
}

// Custom task for building Docker image
task dockerBuild(type: Exec) {
	group = 'docker'
	commandLine 'docker', 'build', '-t', 'trace-the-change-backend', '.'
}
